//=============================================================================
//	mainファイル [ main.h ]
//	Auther : KOTARO NAGASAKI
//=============================================================================
#ifndef _NET_DATA_H_
#define _NET_DATA_H_

//*****************************************************************************
//	インクルード
//*****************************************************************************
#include <winsock2.h>
#include "CommonGL.h"
//*****************************************************************************
//	列挙体定義
//*****************************************************************************

//	データ内容判別正数値
//----------------------------------------------------------------
typedef enum
{
	DATA_TYPE_POS = 100,	//	位置
	DATA_TYPE_ROT,	//	回転
	DATA_TYPE_CANNONROT,	//	回転
	DATA_TYPE_CANNON,	//	発射
	DATA_TYPE_ENTRY,	//	エントリー
	DATA_TYPE_GAME_START,	//	ゲームスタート
	DATA_TYPE_DEATH,	//	死んだ
	DATA_TYPE_KILL,	//	殺した
	DATA_TYPE_PAUSE,	//	ポーズ状態
	DATA_TYPE_EMPTY,	//	満杯
	DATA_TYPE_MAX	//	最大値
}DATA_TYPE;
//----------------------------------------------------------------

//*****************************************************************************
//	構造体定義
//*****************************************************************************

//	位置情報
//----------------------------------------------------------------
typedef struct
{
	float posX;
	float posY;
	float posZ;

}DATA_POS;
//----------------------------------------------------------------

//	回転情報
//----------------------------------------------------------------
typedef struct
{
	float rotX;
	float rotY;
	float rotZ;

}DATA_ROT;
//----------------------------------------------------------------

//	発射フラグ
//----------------------------------------------------------------
typedef struct
{
	bool flag;

}DATA_CANNON;
//----------------------------------------------------------------

//	ポーズ時用データ
//----------------------------------------------------------------
typedef struct
{
	int kill;	//	指定のプレイヤーの殺した数をセット
	int death;	//	指定のプレイヤーの殺された数をセット

}DATA_PAUSE;
//----------------------------------------------------------------

//	送信時用データ
//----------------------------------------------------------------
typedef struct
{
	int ID;
	int type;
	int charNum;
	int servID;

	union
	{
		DATA_POS data_pos;
		DATA_ROT data_rot;
		DATA_ROT data_cannonRot;
		DATA_CANNON data_cannon;
		DATA_PAUSE data_pause;
	};

}NET_DATA;
//----------------------------------------------------------------

// ユーザー情報
//----------------------------------------------------------------
typedef struct {
	sockaddr_in fromaddr;	// アドレス
	bool entryFlag;	//	エントリーフラグ
	int kill;	//	殺した数
	int death;	//	殺された数

	VECTOR3 pos;
	VECTOR3 rot;
	VECTOR3 cannonRot;
	bool cannon;

} USER_INFO;
//----------------------------------------------------------------

static const int SERV_ID = 256;

#endif

//	EOF