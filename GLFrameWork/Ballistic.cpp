//------------------------------------------------------------------------------
//
// 弾 [Ballistic.cpp]
// Author : AT-13A-273 Mai Tanabe
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// マクロ定義
//------------------------------------------------------------------------------
#define BALLISTICT_SPACE (2)	// 弾道の間隔

//------------------------------------------------------------------------------
// ヘッダインクルード
//------------------------------------------------------------------------------
#include <math.h>

#include "Ballistic.h"

//------------------------------------------------------------------------------
// コンストラクタ
//------------------------------------------------------------------------------
// 引数
//  なし
//------------------------------------------------------------------------------
CBallistic::CBallistic()
{
}

//------------------------------------------------------------------------------
// デストラクタ
//------------------------------------------------------------------------------
// 引数
//  なし
//------------------------------------------------------------------------------
CBallistic::~CBallistic()
{

}

//------------------------------------------------------------------------------
// 初期化
//------------------------------------------------------------------------------
// 引数
//  なし
// 戻り値
//  なし
//------------------------------------------------------------------------------
void CBallistic::Init( COLOR color)
{
  for (int cnt = 0; cnt < MARK_MAX; cnt++)
  {
    BallisticMark[cnt] = CBillboard::Create(VECTOR3(0.0f, 0.0f, 0.0f),
                                            VECTOR2(1.5f, 1.5f),
                                            VECTOR3(0.0f, 0.0f, 0.0f),
                                            color);
    BallisticMark[cnt]->SetTex(CTexture::Texture(TEX_BALLISTIC));
  }
}

//------------------------------------------------------------------------------
// 更新
//------------------------------------------------------------------------------
// 引数
//  pos : 位置
//  rot : 回転
// 戻り値
//  なし
//------------------------------------------------------------------------------
void CBallistic::Update(VECTOR3 pos, VECTOR3 rot)
{
  VECTOR3 MoveVec;
  VECTOR3 MoveSpeed = VECTOR3(BULLET_SPEED, BULLET_SPEED, BULLET_SPEED);

  // 回転量の変換
  rot.x = DEG2RAD(rot.x);
  rot.y = DEG2RAD(rot.y);
  REVISE_PI(rot.x);
  REVISE_PI(rot.y);

  // 進行方向
  MoveVec.x = sinf(rot.y) * cosf(rot.x);
  MoveVec.z = cosf(rot.y) * cosf(rot.x);
  MoveVec.y = -sinf(rot.x);

  // 移動量
  MoveSpeed.x *= MoveVec.x;
  MoveSpeed.z *= MoveVec.z;
  MoveSpeed.y *= MoveVec.y;

  for (int cnt = 0; cnt < MARK_MAX; cnt++)
  {
    pos.x += MoveSpeed.x * BALLISTICT_SPACE;
    pos.z += MoveSpeed.z * BALLISTICT_SPACE;
    pos.y += MoveSpeed.y * BALLISTICT_SPACE;
	MoveSpeed.y += BULLET_GRAVITY * BALLISTICT_SPACE;

    BallisticMark[cnt]->SetPos(pos);
  }
}

//------------------------------------------------------------------------------
// 生成
//------------------------------------------------------------------------------
// 引数
//  color : 色
// 戻り値
//  CBallistic : 生成した弾道のポインタ
//------------------------------------------------------------------------------
CBallistic* CBallistic::Create(COLOR color)
{
  CBallistic* Scene = new CBallistic;

	Scene->Init(color);

	return Scene;
}

//------------------------------------------------------------------------------
// EOF