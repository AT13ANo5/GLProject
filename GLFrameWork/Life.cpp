//=============================================================================
//インクルード
//=============================================================================
#include "Polygon2D.h"
#include <math.h>
#include "Texture.h"
#include "Life.h"

CLife* Life[3] = {NULL};
//=============================================================================
//コストラクタ
//=============================================================================
CLife::CLife()
{
	_Pos.x =
		_Pos.y =
		_Pos.z = 0;

	_Rot.x =
		_Rot.y =
		_Rot.z = 0;

	LifePoint = 3;

}
//=============================================================================
//初期化
//=============================================================================
void CLife::Init(void)
{
	CPolygon2D::Init();

	Texture = CTexture::Texture(TEX_LIFE);
	uv.InverseV = false;
	uv.Set();

}
//=============================================================================
//作成
//=============================================================================
CLife* CLife::Create(const VECTOR3& pos, const VECTOR2& size, const VECTOR3& rot, const COLOR& color)
{

	for (int i = 0; i < 3; i++)
	{
		Life[i] = new CLife;
		Life[i]->_Pos = pos;
		Life[i]->_Pos.x += (i + 50);
		Life[i]->_Rot = rot;
		Life[i]->SetSize(size);
		Life[i]->_Color = color;
		Life[i]->Init();
	}

	return *Life;
}

//=============================================================================
//終了処理
//=============================================================================
void CLife::Uninit(void)
{
	delete this;
}
//=============================================================================
//更新
//=============================================================================
void CLife::Update(void)
{
	switch (LifePoint)
	{
	case 0:
		if (Life[0]->_Color.a != 0)
		{
			Life[0]->_Color.a = 0;
		}
		break;
	//ライフ残り１
	case 1:
		if (Life[1]->_Color.a != 0)
		{
			Life[1]->_Color.a = 0;
		}
		break;
	//ライフ残り２
	case 2:
		if (Life[2]->_Color.a != 0)
		{
			Life[2]->_Color.a = 0;
		}
		break;
	//ライフ残り3
	case 3:
		break;

	}
}
//=============================================================================
//描画
//=============================================================================
