//------------------------------------------------------------------------------
//
// 弾 [CBullet.cpp]
// Author : AT-13A-273 Shinnosuke Munakata
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// ヘッダインクルード
//------------------------------------------------------------------------------
#include "CBullet.h"
#include "CPlayer.h"

//------------------------------------------------------------------------------
// コンストラクタ
//------------------------------------------------------------------------------
// 引数
//  なし
//------------------------------------------------------------------------------
CBullet::CBullet():CBillboard()
{
	// 速度
	Movement = VECTOR3(0.0f, 0.0f, 3.0f);

	// テクスチャ
	Texture = CTexture::Texture(TEX_TEST);
}

//------------------------------------------------------------------------------
// デストラクタ
//------------------------------------------------------------------------------
// 引数
//  なし
//------------------------------------------------------------------------------
CBullet::~CBullet()
{

}

//------------------------------------------------------------------------------
// 更新
//------------------------------------------------------------------------------
// 引数
//  なし
// 戻り値
//  なし
//------------------------------------------------------------------------------
void CBullet::Update(void)
{
	// 移動
	AddPos(Movement);
}

//------------------------------------------------------------------------------
// 生成
//------------------------------------------------------------------------------
// 引数
//  pos : 位置
//  size : サイズ
//  rot : 回転
//  color : 色
// 戻り値
//  なし
//------------------------------------------------------------------------------
CBullet* CBullet::Create(const VECTOR3& pos,const VECTOR2& size,const VECTOR3& rot,const COLOR& color)
{
	CBullet* Scene = new CBullet;
	Scene->_Pos = pos;
	Scene->_Rot = rot;
	Scene->_Size = size;
	Scene->_Color = color;

	Scene->Init();

	return Scene;
}

//------------------------------------------------------------------------------
// EOF